version: "1"
name: "Login Attack Scenario"
description: "Complete login flow with infinite attack loop"
vars:
  base: "https://target.app"
  user: "{{ env:APP_USER }}"
  pass: "{{ env:APP_PASS }}"

steps:
  - id: open
    type: browser:navigate
    name: "Open Login Page"
    description: "Navigate to the login page"
    inputs:
      url: "{{ vars.base }}/login"
      wait: "networkidle"
    timeout: 30s
    retry_count: 3

  - id: fill_login
    type: browser:fill
    name: "Fill Login Form"
    description: "Fill username and password fields"
    inputs:
      selectors: |
        - sel: "#username"
          value: "{{ vars.user }}"
        - sel: "#password"
          value: "{{ vars.pass }}"
    timeout: 10s

  - id: submit
    type: browser:click
    name: "Submit Login"
    description: "Click the submit button and wait for navigation"
    inputs:
      selector: "button[type=submit]"
      wait: "networkidle"
    on_success: [capture_session]
    timeout: 30s

  - id: capture_session
    type: session:update
    name: "Capture Session Data"
    description: "Capture cookies, headers, and storage from browser"
    inputs:
      from: "browser"
      save: "[cookies, headers, storage]"
    timeout: 5s

  - id: enumerate_routes
    type: net:request
    name: "Enumerate API Routes"
    description: "Get available API routes for attack"
    inputs:
      method: "GET"
      url: "{{ vars.base }}/api/routes"
    guards:
      expect_status: "200"
    timeout: 10s

  - id: attack_api
    type: net:attack
    name: "Attack API Endpoints"
    description: "Perform comprehensive attack on discovered endpoints"
    inputs:
      target:
        from_last_response_jsonpath: "$.routes[*].url"
      mutate:
        methods: "[GET, POST, PUT, DELETE]"
        bodies: "[json, xml, form, urlencoded]"
        payload_sets: "[xss.reflected, sqli.error, sqli.time, ssrf.basic, xxe.file]"
        max_variants_per_req: "12"
      checks:
        enabled: "[xss, sqli, ssrf, xxe, headers, cors]"
      concurrency: "8"
      rate_limit: "5/s"
    timeout: 300s

  - id: loop_forever
    type: control:while
    name: "Infinite Attack Loop"
    description: "Continuously perform attacks while maintaining session"
    inputs:
      condition: "true"
    children:
      - id: refresh_profile
        type: browser:navigate
        name: "Refresh Profile Page"
        description: "Navigate to profile to maintain session"
        inputs:
          url: "{{ vars.base }}/profile"
          wait: "domcontentloaded"
        timeout: 30s

      - id: timed_attack
        type: net:attack
        name: "Timed Attack on Profile API"
        description: "Attack profile API with timing-based payloads"
        inputs:
          target:
            url: "{{ vars.base }}/api/profile"
          mutate:
            methods: "[GET, POST]"
            payload_sets: "[xss.reflected, sqli.time]"
            max_variants_per_req: "4"
          checks:
            enabled: "[xss, sqli]"
        effects:
          sleep_after: "30s"
        timeout: 60s

metadata:
  author: "OWASPAttackSimulator"
  created: "2024-01-01"
  tags: "[login, attack, infinite, session]"
  risk_level: "high"
