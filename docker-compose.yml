services:
  # CLI Service
  cli:
    build:
      context: .
      dockerfile: build/docker/Dockerfile.cli
    container_name: owaspchecker-cli
    ports:
      - "50051:50051"
    volumes:
      - ./data:/app/data
      - ./configs:/app/configs:ro
      - ./plugins:/app/plugins:ro
    environment:
      - OWASPCHECKER_CONFIG=/app/configs/defaults.yaml
      - OWASPCHECKER_DB_PATH=/app/data/owaspchecker.db
      - OWASPCHECKER_GUI_URL=http://owaspchecker-gui:3000
    networks:
      - owaspchecker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "./owaspchecker", "--help"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # GUI Runner Service
  gui:
    build:
      context: .
      dockerfile: build/docker/Dockerfile.gui
    container_name: owaspchecker-gui
    ports:
      - "3000:3000"
      - "9222:9222"
    volumes:
      - ./data:/app/data
      - ./configs:/app/configs:ro
    environment:
      - NODE_ENV=production
      - OWASPCHECKER_BROKER_URL=grpc://cli:50051
    networks:
      - owaspchecker-network
    depends_on:
      cli:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # All-in-One Service (alternative)
  all-in-one:
    build:
      context: .
      dockerfile: build/docker/Dockerfile.all-in-one
    container_name: owaspchecker-all-in-one
    ports:
      - "50052:50051"
      - "3001:3000"
    volumes:
      - ./data:/app/data
      - ./configs:/app/configs:ro
      - ./plugins:/app/plugins:ro
    environment:
      - OWASPCHECKER_CONFIG=/app/configs/defaults.yaml
      - OWASPCHECKER_DB_PATH=/app/data/owaspchecker.db
    networks:
      - owaspchecker-network
    restart: unless-stopped
    profiles:
      - all-in-one
    healthcheck:
      test: ["CMD", "./bin/owaspchecker", "--help"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: owaspchecker-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./build/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./build/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - owaspchecker-network
    depends_on:
      - cli
      - gui
    restart: unless-stopped
    profiles:
      - nginx

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: owaspchecker-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - owaspchecker-network
    restart: unless-stopped
    profiles:
      - redis
    command: redis-server --appendonly yes

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: owaspchecker-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./build/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - owaspchecker-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: owaspchecker-grafana
    ports:
      - "3002:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./build/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./build/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - owaspchecker-network
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  owaspchecker-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
